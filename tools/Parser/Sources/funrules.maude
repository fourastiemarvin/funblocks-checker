(fmod Bool is
 sort Bool .
op true : -> Bool .
op false : -> Bool .
endfm)
(fmod Rel is
 sort Rel .
op zero : -> Rel .
op succ : Rel -> Rel .
op minus : Rel -> Rel .
endfm)
(view $T from TRIV to Rel is sort Elt to Rel . endv)
(fmod List{T :: TRIV} is
 sort List{T} .
op empty : -> List{T} .
op cons : List{T} T$Elt -> List{T} .
endfm)
(fmod FUNRULES is
including Bool .
including Rel .
including List{$T} .
op size : List{$T} -> Rel .
op isEmpty : List{$T} -> Bool .
eq size(empty) = zero .
var $x : Rel .
eq size(cons(empty, $x)) = succ(zero) .
--- eq succ($x) = succ(succ($x)) .
eq isEmpty(empty) = true .
 endfm)
