fmod FUNBLOCKS-SYNTAX is
  protecting QID-LIST .
  sorts Token Bubble NeTokenList .
  op token : Qid -> Token
       [special
          (id-hook Bubble        (1 1)
           op-hook qidSymbol     (<Qids> : ~> Qid))] .

  op bubble : QidList -> Bubble
       [special
          (id-hook Bubble        (1 -1)
           op-hook qidListSymbol (__ : QidList QidList ~> QidList)
           op-hook qidSymbol     (<Qids> : ~> Qid)
           id-hook Exclude       (.))] .

  op neTokenList : QidList -> NeTokenList
       [special
          (id-hook Bubble        (1 -1)
           op-hook qidListSymbol (__ : QidList QidList ~> QidList)
           op-hook qidSymbol     (<Qids> : ~> Qid)
           id-hook Exclude       (->))] .

  --- sorts Decl DeclList PreModule Input Command .
  --- subsort Decl < DeclList .
  --- subsorts PreModule Command < Input .

  --- sorts Term Func Var Const State Rule RuleList Expr Input Command  .
  --- subsorts Const Var Func < Term .
  --- subsort Term State Rule < Expr .
  --- subsort Rule < RuleList .

  sorts Const Decl DeclList PreModule Input Command .
  sorts Term Var .
  subsort Decl < DeclList .
  subsort PreModule Command < Input .

  --- dist(point($x1, $y1), point($x2, $y2))
      --- => sqrt(add(sub($x1, $x2), sub($y1, $y2)))

  --- op init_ : Bubble -> State .
  ---
  --- op case_=>_ : Bubble Bubble -> Rule .
  ---
  --- op _(_) : Token Bubble -> Func .
  ---
  --- op $_ : Token -> Var .
  ---
  --- op __ : RuleList RuleList -> RuleList [assoc gather(e E)] .

  --- op including_. : Token -> Decl .

  --- sort declaration
  --- op sort_. : Token -> Decl .

  --- operator declaration
  --- op op_: ->_. : Token Token -> Decl .
  --- op op_:_->_. : Token NeTokenList Token -> Decl .

  --- equation declaration
  --- op eq_=_. : Bubble Bubble -> Decl .

  op case_=>_ : Bubble Bubble -> Decl .
  --- op case_=>_ : Token Token -> Decl .

  op f : -> Const .
  op g : -> Const .
  --- op _ : Token -> Const .
  --- op _ : Qid -> Const .
  --- op _() : Bubble -> Term .
  --- op $_ : Token -> Var .

  --- op fmod_is_endfm : Token DeclList -> PreModule .
  --- op __ : DeclList DeclList -> DeclList [assoc gather(e E)] .

  --- op reduce_. : Bubble -> Command .

endfm

--- red in META-LEVEL :
---   getRls(upModule('FUNBLOCKS-SYNTAX, false)) .

--- reduce in META-LEVEL :
---   metaParse(upModule('FUNBLOCKS-SYNTAX, false),
---             'case 'f '=> 'g, anyType) .
---
--- reduce in META-LEVEL :
---   metaParse(upModule('FUNBLOCKS-SYNTAX, false),
---             'init 'area 'r , anyType) .
---
--- reduce in META-LEVEL :
---   metaParse(upModule('FUNBLOCKS-SYNTAX, false),
---     'f '`( 'a '`) , anyType) .
---
--- reduce in META-LEVEL :
---   metaParse(upModule('FUNBLOCKS-SYNTAX, false),
---     'case 'f '`( '$ 'x '`) '=> 'a , anyType) .
---
--- reduce in META-LEVEL :
---   metaParse(upModule('FUNBLOCKS-SYNTAX, false),
---     '$ 'x , anyType) .
